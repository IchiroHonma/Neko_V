2019-05-12-VBAコレクション

'(1) 重要：通常モジュールでは、ローカルの外に束縛オブジェクト持てない
'Set m_col = New Collection
'やっぱ通常モジュールで、プロージャの外に束縛オブジェクトは持てないな

'(2) 重要：戻り値が「存在できる場所以外で()が使えない」、戻り値の所在ない場所に()使えない
'たとえば、label = ここ()
'たとえば、msgbox ここ()
'たとえば、call ここ()  必須
'たとえば、左辺値として ここ() =    :これも忘れがち ここ " " = みたいなのおかしいよね
'だから m_col.add(item, key) は不正　（戻り値の所在がない）

'(3) collection indexは 1 から
'0からのインデックスって配列のみ？

'(4) dictionary indexは 0 から
'https://qiita.com/nkmrtkhd/items/b451b66249dd737396bd
'しかも Scripting.Runtimeで事前バインディングしない場合
' m_dic.Items()(index)
' m_dic.Keys()(index)
' みたいな使い方しなくちゃいけない

'(5) ubound() は 配列じゃないと使えない
'つまり配列以外のindexありオブジェクトは基本 1からだ

'(6) objectは　開放を忘れずに
'set obj = nothing

VBAのコレクションは
自身で作れるいろんなものを入れる箱
オブジェクトなら何でも入る
組み込みのuserformとかも入れることができるかな（多分できると思う）
objectカタを入れることができるからね
→ただUserFormカタとかはなんか特殊だったので注意が必要

https://excelwork.info/excel/collection/

dim m_col as collection
set m_col = new collection

m_col.add (item:= , key:= , before:= , after:=)
m_col.remove ({index|key})	:つまりコレクションにはindexある

element = m_col({index|key})
m_col.count

(1) index番号は有る、ただし before, after でindex番号は後から崩れる
before:=1 なら 「new が 1 になり old が 2になる」








[[dictionary]]とはなんぞや	:多分「イテレータなしの collection と思っちゃおう→というわけでもなさそうだな
→つまり、keyでしか参照できないぞ というわけでもなさそうだな

http://vba-school.com/microsoft-scripting-runtime/dictionary-001.html

FileSystemObjectのような、外部オブジェクトだよ
というわけで

Dim m_dic as Object
Set m_dic = CreateObject("Scripting.Dictionary")
となる
CreateObjectは「一時オブジェクトを返すので」 new Classによる一時オブジェクトと本質的に同じことを行っている

m_dic.add (key:=, item:= )	:collectionと逆！
m_dic.Item("KEY") = ITEM
m_dic("KEY") = ITEM
どれでもできる

m_dic("KEY")	-> item
m_disk.Items(index) -> item
m_disk.Keys(index) -> key

これ通常の コレクションに似てるけど結構違うよ
でもインデックス的な扱いをすることができる
